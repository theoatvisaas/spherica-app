// GENERATED CODE - DO NOT MODIFY BY HAND
// This code was generated by ObjectBox. To update it run the generator again:
// With a Flutter package, run `flutter pub run build_runner build`.
// With a Dart package, run `dart run build_runner build`.
// See also https://docs.objectbox.io/getting-started#generate-objectbox-code

// ignore_for_file: camel_case_types, depend_on_referenced_packages
// coverage:ignore-file

import 'dart:typed_data';

import 'package:flat_buffers/flat_buffers.dart' as fb;
import 'package:objectbox/internal.dart'
    as obx_int; // generated code can access "internal" functionality
import 'package:objectbox/objectbox.dart' as obx;
import 'package:objectbox_flutter_libs/objectbox_flutter_libs.dart';

import '../models/reminder.dart';

export 'package:objectbox/objectbox.dart'; // so that callers only have to import this file

final _entities = <obx_int.ModelEntity>[
  obx_int.ModelEntity(
      id: const obx_int.IdUid(1, 302524581809180449),
      name: 'Reminder',
      lastPropertyId: const obx_int.IdUid(10, 4479529955772289265),
      flags: 0,
      properties: <obx_int.ModelProperty>[
        obx_int.ModelProperty(
            id: const obx_int.IdUid(1, 7755305700659794430),
            name: 'id',
            type: 6,
            flags: 1),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(2, 8968461165024263264),
            name: 'dadId',
            type: 6,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(3, 5761075689261344318),
            name: 'hour',
            type: 6,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(4, 31359644121389736),
            name: 'minute',
            type: 6,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(5, 4357914393771531507),
            name: 'title',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(6, 6311731827836075913),
            name: 'description',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(7, 7318924147318623491),
            name: 'repeatCount',
            type: 6,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(8, 7099321547752727826),
            name: 'repeatInterval',
            type: 6,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(9, 1745838483141920323),
            name: 'repeat',
            type: 1,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(10, 4479529955772289265),
            name: 'enabled',
            type: 1,
            flags: 0)
      ],
      relations: <obx_int.ModelRelation>[],
      backlinks: <obx_int.ModelBacklink>[])
];

/// Shortcut for [Store.new] that passes [getObjectBoxModel] and for Flutter
/// apps by default a [directory] using `defaultStoreDirectory()` from the
/// ObjectBox Flutter library.
///
/// Note: for desktop apps it is recommended to specify a unique [directory].
///
/// See [Store.new] for an explanation of all parameters.
///
/// For Flutter apps, also calls `loadObjectBoxLibraryAndroidCompat()` from
/// the ObjectBox Flutter library to fix loading the native ObjectBox library
/// on Android 6 and older.
Future<obx.Store> openStore(
    {String? directory,
    int? maxDBSizeInKB,
    int? maxDataSizeInKB,
    int? fileMode,
    int? maxReaders,
    bool queriesCaseSensitiveDefault = true,
    String? macosApplicationGroup}) async {
  await loadObjectBoxLibraryAndroidCompat();
  return obx.Store(getObjectBoxModel(),
      directory: directory ?? (await defaultStoreDirectory()).path,
      maxDBSizeInKB: maxDBSizeInKB,
      maxDataSizeInKB: maxDataSizeInKB,
      fileMode: fileMode,
      maxReaders: maxReaders,
      queriesCaseSensitiveDefault: queriesCaseSensitiveDefault,
      macosApplicationGroup: macosApplicationGroup);
}

/// Returns the ObjectBox model definition for this project for use with
/// [Store.new].
obx_int.ModelDefinition getObjectBoxModel() {
  final model = obx_int.ModelInfo(
      entities: _entities,
      lastEntityId: const obx_int.IdUid(1, 302524581809180449),
      lastIndexId: const obx_int.IdUid(0, 0),
      lastRelationId: const obx_int.IdUid(0, 0),
      lastSequenceId: const obx_int.IdUid(0, 0),
      retiredEntityUids: const [],
      retiredIndexUids: const [],
      retiredPropertyUids: const [],
      retiredRelationUids: const [],
      modelVersion: 5,
      modelVersionParserMinimum: 5,
      version: 1);

  final bindings = <Type, obx_int.EntityDefinition>{
    Reminder: obx_int.EntityDefinition<Reminder>(
        model: _entities[0],
        toOneRelations: (Reminder object) => [],
        toManyRelations: (Reminder object) => {},
        getId: (Reminder object) => object.id,
        setId: (Reminder object, int id) {
          object.id = id;
        },
        objectToFB: (Reminder object, fb.Builder fbb) {
          final titleOffset = fbb.writeString(object.title);
          final descriptionOffset = fbb.writeString(object.description);
          fbb.startTable(11);
          fbb.addInt64(0, object.id);
          fbb.addInt64(1, object.dadId);
          fbb.addInt64(2, object.hour);
          fbb.addInt64(3, object.minute);
          fbb.addOffset(4, titleOffset);
          fbb.addOffset(5, descriptionOffset);
          fbb.addInt64(6, object.repeatCount);
          fbb.addInt64(7, object.repeatInterval);
          fbb.addBool(8, object.repeat);
          fbb.addBool(9, object.enabled);
          fbb.finish(fbb.endTable());
          return object.id;
        },
        objectFromFB: (obx.Store store, ByteData fbData) {
          final buffer = fb.BufferContext(fbData);
          final rootOffset = buffer.derefObject(0);
          final idParam =
              const fb.Int64Reader().vTableGet(buffer, rootOffset, 4, 0);
          final dadIdParam =
              const fb.Int64Reader().vTableGetNullable(buffer, rootOffset, 6);
          final hourParam =
              const fb.Int64Reader().vTableGet(buffer, rootOffset, 8, 0);
          final minuteParam =
              const fb.Int64Reader().vTableGet(buffer, rootOffset, 10, 0);
          final titleParam = const fb.StringReader(asciiOptimization: true)
              .vTableGet(buffer, rootOffset, 12, '');
          final descriptionParam =
              const fb.StringReader(asciiOptimization: true)
                  .vTableGet(buffer, rootOffset, 14, '');
          final repeatCountParam =
              const fb.Int64Reader().vTableGetNullable(buffer, rootOffset, 16);
          final repeatIntervalParam =
              const fb.Int64Reader().vTableGetNullable(buffer, rootOffset, 18);
          final repeatParam =
              const fb.BoolReader().vTableGet(buffer, rootOffset, 20, false);
          final enabledParam =
              const fb.BoolReader().vTableGet(buffer, rootOffset, 22, false);
          final object = Reminder(
              id: idParam,
              dadId: dadIdParam,
              hour: hourParam,
              minute: minuteParam,
              title: titleParam,
              description: descriptionParam,
              repeatCount: repeatCountParam,
              repeatInterval: repeatIntervalParam,
              repeat: repeatParam,
              enabled: enabledParam);

          return object;
        })
  };

  return obx_int.ModelDefinition(model, bindings);
}

/// [Reminder] entity fields to define ObjectBox queries.
class Reminder_ {
  /// see [Reminder.id]
  static final id =
      obx.QueryIntegerProperty<Reminder>(_entities[0].properties[0]);

  /// see [Reminder.dadId]
  static final dadId =
      obx.QueryIntegerProperty<Reminder>(_entities[0].properties[1]);

  /// see [Reminder.hour]
  static final hour =
      obx.QueryIntegerProperty<Reminder>(_entities[0].properties[2]);

  /// see [Reminder.minute]
  static final minute =
      obx.QueryIntegerProperty<Reminder>(_entities[0].properties[3]);

  /// see [Reminder.title]
  static final title =
      obx.QueryStringProperty<Reminder>(_entities[0].properties[4]);

  /// see [Reminder.description]
  static final description =
      obx.QueryStringProperty<Reminder>(_entities[0].properties[5]);

  /// see [Reminder.repeatCount]
  static final repeatCount =
      obx.QueryIntegerProperty<Reminder>(_entities[0].properties[6]);

  /// see [Reminder.repeatInterval]
  static final repeatInterval =
      obx.QueryIntegerProperty<Reminder>(_entities[0].properties[7]);

  /// see [Reminder.repeat]
  static final repeat =
      obx.QueryBooleanProperty<Reminder>(_entities[0].properties[8]);

  /// see [Reminder.enabled]
  static final enabled =
      obx.QueryBooleanProperty<Reminder>(_entities[0].properties[9]);
}
